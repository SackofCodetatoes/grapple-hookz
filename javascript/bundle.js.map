{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./javascript/display.js","webpack:///./javascript/game.js","webpack:///./javascript/game_entity.js","webpack:///./javascript/grapplehook.js","webpack:///./javascript/platform.js","webpack:///./javascript/player.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;;AAEA;AACA;AACA,qB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,O;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA,mDAAmD;AACnD;AACA;AACA;AACA;;AAEA,kDAAkD;AAClD,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mDAAmD;;AAEnD,gEAAgE;AAChE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;AAIA,W;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,mCAAmC;AACnC;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAoB,oCAAoC;AACxD;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,yB;;;;;;;;;;;ACrNA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;AACA,iD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,CAAC;;AAED,sB;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4B;;;;;;;;;;;ACtBA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACTA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0B;;;;;;;;;;;ACVA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./javascript/grapplehook.js\");\n","const Game = require(\"./game.js\");\r\nconst Player = require(\"./player.js\");\r\nconst GameEntity = require(\"./game_entity.js\");\r\nconst PLAYER_KEYS = ['w', 'a', 's', 'd', 'f'];\r\n\r\nclass Display {\r\n  constructor(game){\r\n    this.game = game;  \r\n    this.game = this.game  \r\n    this.playerInput = {\r\n      a: false,\r\n      d: false,\r\n      w: false,\r\n      s: false,\r\n      ' ': false,\r\n      canJump: 'true',\r\n      mousePos: {x: 0, y: 0}\r\n    }\r\n    this.keyBind();\r\n    debugger\r\n    this.getInput = this.getInput.bind(this);\r\n    this.applyPhysics = this.applyPhysics.bind(this);\r\n  }\r\n  //source of inspiration for omni-directional movement/fluidity\r\n  //https://stackoverflow.com/questions/12273451/how-to-fix-delay-in-javascript-keydown\r\n  keyBind() {\r\n    document.addEventListener('keydown', (event) => {\r\n      const keyName = event.key;\r\n      if (PLAYER_KEYS.includes(event.key)) {\r\n        this.playerInput[event.key] = true;\r\n      }\r\n    });\r\n    document.addEventListener('keyup', (event) => {\r\n      if (PLAYER_KEYS.includes(event.key)) {\r\n        this.playerInput[event.key] = false;\r\n      }\r\n    });\r\n    document.addEventListener('keydown', (event) => {\r\n      if(event.key === ' ' && this.playerInput.canJump === true){\r\n        console.log('HARD PRESSED');\r\n        this.playerInput.canJump = false;\r\n        this.game.entities.newPlayer.vspd = -4;\r\n      }\r\n    })\r\n    document.addEventListener('mousemove', (event) => {\r\n      let rect = this.game.canvas.getBoundingClientRect();\r\n      // this.playerInput.mousePos = { x: event.clientX - rect.left, y: event.clientY-rect.top };\r\n      this.playerInput.mousePos.x = event.clientX;\r\n      this.playerInput.mousePos.y = event.clientY;\r\n      // console.log(this.playerInput.mousePos);\r\n      // console.log('y: ', event.clientY);\r\n    })\r\n\r\n  }\r\n  getInput() {\r\n    let player = this.game.entities.newPlayer;\r\n    let next;\r\n    if (this.playerInput['a'] === true) {\r\n      next = {\r\n        x: player.x - player.moveSpd,\r\n      }\r\n      if(this.game.collisionCheck(Object.assign({}, player, next))){\r\n        while (!this.game.collisionCheck(player)){\r\n          this.game.entities.newPlayer.x -= 1;\r\n        }\r\n        this.game.entities.newPlayer.x += 1;\r\n      } \r\n      else \r\n        this.game.entities.newPlayer.x -= this.game.entities.newPlayer.moveSpd;\r\n    }\r\n\r\n    if (this.playerInput['d'] === true) {\r\n      next = {\r\n        x: player.x + player.moveSpd,\r\n      }\r\n      if (this.game.collisionCheck(Object.assign({}, player, next))) {\r\n        while (!this.game.collisionCheck(player)) {\r\n          this.game.entities.newPlayer.x += 1;\r\n        }\r\n        this.game.entities.newPlayer.x -= 1;\r\n      }\r\n      else this.game.entities.newPlayer.x += this.game.entities.newPlayer.moveSpd;\r\n    }\r\n\r\n    if (this.playerInput['w'] === true) {\r\n      next = {\r\n        y: player.y - player.moveSpd\r\n      }\r\n      if (this.game.collisionCheck(Object.assign({}, player, next))) {\r\n        while (!this.game.collisionCheck(player)) {\r\n          this.game.entities.newPlayer.y -= 1;\r\n        }\r\n        this.game.entities.newPlayer.y+=1;\r\n      }\r\n      else this.game.entities.newPlayer.y -= this.game.entities.newPlayer.moveSpd;\r\n    }\r\n    \r\n    if(this.playerInput['f'] === true) {\r\n      \r\n        this.game.entities.newPlayer.vspd = 1;\r\n        // console.log('space');\r\n      \r\n    }\r\n    // if (this.playerInput['s'] === true) {\r\n    //   next = {\r\n    //     y: player.y + player.moveSpd\r\n    //   }\r\n    //   if (this.game.collisionCheck(Object.assign({}, player, next))) {\r\n    //     while (!this.game.collisionCheck(player)) {\r\n    //       this.game.entities.newPlayer.y += 1;\r\n    //     }\r\n    //     this.game.entities.newPlayer.y -= 1;\r\n    //   }\r\n    //   else this.game.entities.newPlayer.y += this.game.entities.newPlayer.moveSpd;\r\n    // }\r\n  }\r\n\r\n    // if (this.playerInput[' '] === true) {\r\n    //   this.game.collisionCheck();\r\n    // }\r\n    \r\n  applyPhysics(obj){\r\n    let nextStep = obj;\r\n    let checkStep = Object.assign({}, obj);\r\n    checkStep.y = checkStep.y + checkStep.vspd + 1;\r\n    // console.log('check me out', Object.assign({}, obj, checkStep));\r\n    //  debugger\r\n    if(obj.vspd < 8){\r\n      obj.vspd += 0.2;\r\n    }\r\n\r\n    if (!this.game.collisionCheck(Object.assign({}, obj, checkStep))) {\r\n      // console.log(this.game.collisionCheck(Object.assign({}, obj, checkStep)))\r\n      // nextStep = this.game.gravStep(obj);\r\n      // if(nextStep.vspd < 0){\r\n      //   // console.log('slow down!')\r\n      //   nextStep.vsp += 1;\r\n      //   // console.log(nextStep.vspd)\r\n      // }\r\n      nextStep.y += nextStep.vspd;\r\n      // console.log(nextStep.vspd);\r\n      // obj['test'] = 'value';\r\n      // obj.move();\r\n      //fall\r\n    } else {\r\n      obj.vspd = 0;\r\n      this.playerInput.canJump = true;\r\n      if (this.game.collisionCheck(Object.assign({}, obj, nextStep))) {\r\n\r\n        // console.log(this.game.collisionCheck(Object.assign({}, obj, checkStep)))\r\n        while (!this.game.collisionCheck(obj)) {\r\n          this.game.entities.newPlayer.y += 2;\r\n        }\r\n        console.log(this.game.collisionCheck(obj))\r\n        this.game.entities.newPlayer.y -= 2;\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n  \r\n\r\n  \r\n  render(){  \r\n    const canvas = this.game.canvas;\r\n\r\n    const context = this.game.context;\r\n    let newPlayer = this.game.entities.newPlayer;\r\n    let staticEntity = this.game.entities.staticEntity;\r\n    let move_dir = this.game.entities.move_dir;\r\n    let entities = this.game.entities;\r\n    let getInput = this.getInput;\r\n    let mousePos = this.playerInput.mousePos;\r\n    console.log(this.playerInput.mousePos);\r\n    let applyPhysics = this.applyPhysics;\r\n    \r\n    \r\n    setInterval(function () {\r\n      context.clearRect(0, 0, 640, 480);\r\n      context.fillStyle = 'orange'; //background \r\n      context.fillRect(0, 0, 640, 480);\r\n\r\n\r\n      \r\n      getInput();\r\n      applyPhysics(newPlayer);\r\n      newPlayer.move();\r\n      // debugger;\r\n      //Test Purposes\r\n      if (entities.staticEntity.y > 200) {\r\n        move_dir = -2;\r\n      } else if (entities.staticEntity.y < 100) {\r\n        move_dir = 2;\r\n      }\r\n\r\n      context.fillStyle = 'black';\r\n      // console.log(mousePos);\r\n      context.beginPath();\r\n      context.arc(mousePos.x, mousePos.y, 20, 0, 2* Math.PI);\r\n      context.stroke();\r\n\r\n      entities.staticEntity.y += move_dir;\r\n\r\n      for(let i = 0; i < Object.values(entities).length; i++){\r\n        requestAnimationFrame(Object.values(entities)[i].draw);\r\n      }\r\n      // requestAnimationFrame(entities.staticEntity.draw);\r\n      // requestAnimationFrame(entities.newPlayer.draw);\r\n\r\n    }, 1000 / 60);\r\n  }\r\n}\r\n\r\nmodule.exports = Display;","const Player = require(\"./player.js\");\r\nconst GameEntity = require(\"./game_entity.js\");\r\nconst Platform = require(\"./platform.js\");\r\n\r\nclass Game {\r\n  constructor() {\r\n    this.entities = {};\r\n    this.canvas = document.getElementById('game-canvas');\r\n    this.context = this.canvas.getContext('2d');\r\n    this.platforms = [];\r\n  }\r\n  init() {\r\n    //testing purposes\r\n    const playerOptions = {\r\n      x: 25,\r\n      y: 25,\r\n      context: this.context,\r\n      color: 'blue',\r\n      x_len: 25,\r\n      y_len: 25,\r\n    };\r\n    const staticOptions = {\r\n      x: 0,\r\n      y: 0,\r\n      context: this.context,\r\n      color: 'red',\r\n      x_len: 40,\r\n      y_len: 40,\r\n      context: this.context,\r\n    };\r\n    const platformOptions = {\r\n      x: 0,\r\n      y: 400,\r\n      color: 'black',\r\n      context: this.context,\r\n      x_len: 300,\r\n      y_len: 20,\r\n    }\r\n    const platformOptions2 = {\r\n      x: 70,\r\n      y: 120,\r\n      color: 'black',\r\n      context: this.context,\r\n      x_len: 100,\r\n      y_len: 50,\r\n    }\r\n    // this.move_dir = 1;\r\n    this.entities['platform'] = new Platform(platformOptions);\r\n    this.entities['platform2'] = new Platform(platformOptions2);\r\n    this.entities['staticEntity'] = new GameEntity(staticOptions);\r\n    this.entities['newPlayer'] = new Player(playerOptions);\r\n    this.platforms.push(this.entities.platform); \r\n    this.platforms.push(this.entities.platform2); \r\n  }\r\n  gravStep(obj){\r\n    obj.vspd += 2;\r\n    // console.log(obj);\r\n    return obj;\r\n  }\r\n  collisionCheck(obj) {\r\n    // debugger\r\n    let platforms = this.platforms;\r\n    for(let i = 0; i < platforms.length; i++){\r\n      if( \r\n        ((obj.x + obj.x_len > platforms[i].x && obj.x < platforms[i].x + platforms[i].x_len) &&\r\n          (obj.y + obj.y_len > platforms[i].y && obj.y < platforms[i].y + platforms[i].y_len))\r\n        ) {\r\n          return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n} //end of scope\r\n\r\nmodule.exports = Game;","class GameEntity {\r\n  constructor(options){\r\n    this.x = options.x;\r\n    this.y = options.y;\r\n    this.context = options.context;\r\n    this.color = options.color;\r\n    this.x_len = options.x_len;\r\n    this.y_len = options.y_len;\r\n    this.draw = this.draw.bind(this);\r\n    this.hspd = 0;\r\n    this.vspd = 0;\r\n  }\r\n  draw() {\r\n    this.context.fillStyle = this.color;\r\n    this.context.fillRect(this.x, this.y, this.x_len, this.y_len);\r\n  }\r\n\r\n  move() {\r\n    this.x += this.hspd;\r\n    this.y += this.vspd;\r\n  }\r\n}\r\nmodule.exports = GameEntity;","const Display = require(\"./display.js\");\r\nconst Game = require(\"./game.js\");\r\n\r\n\r\n\r\nconsole.log('all is dandy!');\r\nconst game = new Game();\r\ngame.init();\r\nconst testDisplay = new Display(game);\r\ntestDisplay.render();\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const GameEntity = require(\"./game_entity\");\r\n\r\nclass Platform extends GameEntity {\r\n  constructor(options){\r\n    super(options);\r\n    // this.color = 'black';\r\n    //replace the above with sprite dimensions\r\n  }\r\n  \r\n}\r\nmodule.exports = Platform;","const GameEntity = require(\"./game_entity.js\")\r\n\r\n// const KEY_LEFT = (event.key === 'a');\r\nclass Player extends GameEntity {\r\n  constructor(options) {\r\n    super(options);\r\n    this.moveSpd = 4;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nmodule.exports = Player;\r\n"],"sourceRoot":""}